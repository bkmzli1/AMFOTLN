

plugins {
    id 'java'
    id 'edu.sc.seis.launch4j' version '2.4.6'
}


sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }

    }

    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}


def versions = '1.1.8.6'
def name = 'AMFOTLN'
def main = 'ru.bkmz.tehSistem.Main'
def splash = 'img/fon1.gif'
def author = 'BkzmLitel'

repositories {
    jcenter()
}
compileJava {
    options.incremental = true
    options.fork = true
    options.failOnError = false
    options.encoding = "UTF-8"
}
apply plugin: "edu.sc.seis.launch4j"
jar.baseName = name
jar.version(versions)



launch4j {
    launch4j.xmlFileName("${projectDir}/123.xml")
    launch4j.jar("${projectDir}/build/libs/"+name+"-"+versions+".jar")


    outfile = "(Installer)"+name + " " + versions + ".exe"
    version = versions
    textVersion = versions
    launch4j.jreMinVersion("1.8.0_001")
    launch4j.fileDescription(name)

    companyName = author
    copyright = author

    launch4j.language = 'RUSSIAN'
    launch4j.icon = "${projectDir}/img/icon.ico"

    launch4j.headerType("gui")
    internalName = name
    launch4j.dontWrapJar(false)
}

apply plugin: "edu.sc.seis.launch4j"


group name
version versions
sourceCompatibility = '1.8'
targetCompatibility = '1.8'



repositories {
    mavenCentral()
}


dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.0'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.30.1'

}


jar {
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes(
                'Class-Path': configurations.runtime.files.collect { "lib/$it.name" }.join(' '),
                'Main-Class': main,
                'SplashScreen-Image': splash,
        )
    }
}
